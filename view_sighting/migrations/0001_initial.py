# Generated by Django 3.2 on 2021-08-11 19:01

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group_Sighting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('datetime', models.DateTimeField()),
                ('earthranger_id', models.UUIDField(unique=True)),
                ('earthranger_serial', models.PositiveIntegerField(unique=True)),
                ('json', models.JSONField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, default='')),
            ],
            options={
                'get_latest_by': 'datetime',
            },
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('notes', models.TextField(blank=True, default='')),
                ('profile_id', models.PositiveIntegerField(blank=True, null=True)),
                ('profile_type', models.ForeignKey(blank=True, limit_choices_to=models.Q(models.Q(('app_label', 'view_sighting'), ('model', 'individual_photo')), models.Q(('app_label', 'view_sighting'), ('model', 'sighting_photo')), _connector='OR'), null=True, on_delete=django.db.models.deletion.PROTECT, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Individual_Sighting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('expert_reviewed', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, default='')),
                ('group_sighting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='view_sighting.group_sighting')),
                ('individual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='view_sighting.individual')),
            ],
            options={
                'get_latest_by': 'group_sighting',
            },
        ),
        migrations.CreateModel(
            name='Seek_Identity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('b', 'bull'), ('c', 'cow'), ('?', 'unknown')], max_length=1, null=True)),
                ('age', models.CharField(blank=True, choices=[('6', '1900-1969'), ('7', '1970-1979'), ('8', '1980-1989'), ('9', '1990-1999'), ('0', '2000-2009'), ('1', '2010-2019'), ('2', '2020-2029')], max_length=1, null=True)),
                ('r_tusk', models.CharField(blank=True, choices=[('0', 'Absence'), ('1', 'Presence')], max_length=1, null=True)),
                ('l_tusk', models.CharField(blank=True, choices=[('0', 'Absence'), ('1', 'Presence')], max_length=1, null=True)),
                ('r_prom_tear', models.CharField(blank=True, choices=[('0', 'None'), ('7', 'Position 7'), ('8', 'Position 8'), ('9', 'Position 9')], max_length=1, null=True)),
                ('r_prom_hole', models.CharField(blank=True, choices=[('0', 'None'), ('7', 'Position 7'), ('8', 'Position 8'), ('9', 'Position 9')], max_length=1, null=True)),
                ('r_sec_tear', models.CharField(blank=True, choices=[('0', 'None'), ('7', 'Position 7'), ('8', 'Position 8'), ('9', 'Position 9')], max_length=1, null=True)),
                ('r_sec_hole', models.CharField(blank=True, choices=[('0', 'None'), ('7', 'Position 7'), ('8', 'Position 8'), ('9', 'Position 9')], max_length=1, null=True)),
                ('l_prom_tear', models.CharField(blank=True, choices=[('0', 'None'), ('3', 'Position 3'), ('4', 'Position 4'), ('5', 'Position 5')], max_length=1, null=True)),
                ('l_prom_hole', models.CharField(blank=True, choices=[('0', 'None'), ('3', 'Position 3'), ('4', 'Position 4'), ('5', 'Position 5')], max_length=1, null=True)),
                ('l_sec_tear', models.CharField(blank=True, choices=[('0', 'None'), ('3', 'Position 3'), ('4', 'Position 4'), ('5', 'Position 5')], max_length=1, null=True)),
                ('l_sec_hole', models.CharField(blank=True, choices=[('0', 'None'), ('3', 'Position 3'), ('4', 'Position 4'), ('5', 'Position 5')], max_length=1, null=True)),
                ('r_extreme', models.CharField(blank=True, choices=[('0', 'Absence'), ('1', 'Presence')], max_length=1, null=True)),
                ('l_extreme', models.CharField(blank=True, choices=[('0', 'Absence'), ('1', 'Presence')], max_length=1, null=True)),
                ('r_special', models.CharField(blank=True, choices=[('0', 'Absence'), ('1', 'Presence')], max_length=1, null=True)),
                ('l_special', models.CharField(blank=True, choices=[('0', 'Absence'), ('1', 'Presence')], max_length=1, null=True)),
                ('body_special', models.CharField(blank=True, choices=[('0', 'Absence'), ('1', 'Presence')], max_length=1, null=True)),
                ('individual_sighting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='view_sighting.individual_sighting')),
            ],
        ),
        migrations.CreateModel(
            name='Sighting_Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_name', models.CharField(max_length=100, unique=True)),
                ('image', models.ImageField(unique=True, upload_to='')),
                ('compressed_image', models.ImageField(unique=True, upload_to='')),
                ('thumbnail', models.ImageField(null=True, unique=True, upload_to='')),
                ('group_sighting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='view_sighting.group_sighting')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sighting_Bounding_Box',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('w', models.FloatField()),
                ('h', models.FloatField()),
                ('individual_sighting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='view_sighting.individual_sighting')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='view_sighting.sighting_photo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Injury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('0', '0 Non-Specific'), ('1', '1 Trunk'), ('2', '2 Mouth'), ('3', '3 Chest'), ('4', '4 Tail'), ('5', '5 Right Head A'), ('6', '6 Right Head B'), ('7', '7 Right Head C'), ('8', '8 Right Body A'), ('9', '9 Right Body B'), ('10', '10 Right Body C'), ('11', '11 Right Body D'), ('12', '12 Right Body E'), ('13', '13 Right Body F'), ('14', '14 Right Rear Leg Lower Outer'), ('15', '15 Right Rear Leg Lower Inner'), ('16', '16 Right Rear Leg Upper Outer'), ('17', '17 Right Rear Leg Upper Inner'), ('18', '18 Right Front Leg Lower Outer'), ('19', '19 Right Front Leg Lower Inner'), ('20', '20 Right Front Leg Upper Outer'), ('21', '21 Right Front Leg Upper Inner'), ('22', '22 Right Ear Outer'), ('23', '23 Right Ear Inner'), ('24', '24 Left Head A'), ('25', '25 Left Head B'), ('26', '26 Left Head C'), ('27', '27 Left Body A'), ('28', '28 Left Body B'), ('29', '29 Left Body C'), ('30', '30 Left Body D'), ('31', '31 Left Body E'), ('32', '32 Left Body F'), ('33', '33 Left Rear Leg Lower Outer'), ('34', '34 Left Rear Leg Lower Inner'), ('35', '35 Left Rear Leg Upper Outer'), ('36', '36 Left Rear Leg Upper Inner'), ('37', '37 Left Front Leg Lower Outer'), ('38', '38 Left Front Leg Lower Inner'), ('39', '39 Left Front Leg Upper Outer'), ('40', '40 Left Front Leg Upper Inner'), ('41', '41 Left Ear Outer'), ('42', '42 Left Ear Inner'), ('43', '43 Genitals')], max_length=121, null=True)),
                ('status', models.CharField(blank=True, choices=[('0', 'old'), ('1', 'active'), ('2', 'healed'), ('3', 'not visible')], max_length=1, null=True)),
                ('cause', models.CharField(blank=True, choices=[('0', 'arrow'), ('1', 'spear'), ('2', 'snare'), ('3', 'hyperkeratosis'), ('4', 'unknown'), ('5', 'other')], max_length=1, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('individual_sighting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='view_sighting.individual_sighting')),
            ],
        ),
        migrations.CreateModel(
            name='Individual_Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_name', models.CharField(max_length=100, unique=True)),
                ('image', models.ImageField(unique=True, upload_to='')),
                ('compressed_image', models.ImageField(unique=True, upload_to='')),
                ('thumbnail', models.ImageField(null=True, unique=True, upload_to='')),
                ('individual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='view_sighting.individual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Individual_Bounding_Box',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('w', models.FloatField()),
                ('h', models.FloatField()),
                ('individual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='view_sighting.individual')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='view_sighting.individual_photo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Elephant_Voices_Identity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(blank=True, choices=[('0', 'unknown'), ('1', 'female'), ('2', 'male')], max_length=1, null=True)),
                ('living_status', models.CharField(blank=True, choices=[('0', 'alive'), ('1', 'dead')], max_length=1, null=True)),
                ('life_stage', models.CharField(blank=True, choices=[('0', 'unknown'), ('1', 'senescing adult'), ('2', 'prime adult'), ('3', 'adult'), ('4', 'young adult'), ('5', 'sub-adult')], max_length=1, null=True)),
                ('tusk', models.CharField(blank=True, choices=[('0', 'unknown'), ('1', 'present'), ('2', 'missing')], max_length=1, null=True)),
                ('tusk_attribute', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('0', 'three tusks'), ('1', 'broken left'), ('2', 'broken right'), ('3', 'equal length'), ('4', 'shorter left'), ('5', 'shorter right'), ('6', 'very shorter'), ('7', 'very long'), ('8', 'very thin'), ('9', 'very thick'), ('10', 'very slender'), ('11', 'symmetric'), ('12', 'higher left'), ('13', 'higher right'), ('14', 'up curved'), ('15', 'straight'), ('16', 'splayed'), ('17', 'convergent'), ('18', 'crossed'), ('19', 'skewed'), ('20', 'wonky')], max_length=52, null=True)),
                ('ear_condition', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('0', 'completely smooth'), ('1', 'smooth with tiny nicknames'), ('2', 'serrated'), ('3', 'ragged'), ('4', 'wart/bump'), ('5', 'prominent veins'), ('6', 'crinkle'), ('7', 'fold'), ('8', 'damaged'), ('9', 'curtain'), ('10', 'flop'), ('11', 'droopy')], max_length=25, null=True)),
                ('ear_notch', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('0', 'unusual notch'), ('1', 'outstanding notch or tear'), ('2', 'v-notch'), ('3', 'u-notch'), ('4', 'cup-notch'), ('5', 'dip-notch'), ('6', 'scoop-notch'), ('7', 'square-notch')], max_length=15, null=True)),
                ('body_type', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('0', 'collar'), ('1', 'bump/lump right'), ('2', 'bump/lump left'), ('3', 'permanently lame'), ('4', 'head low')], max_length=9, null=True)),
                ('trunk_face_features', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('0', 'strange skin pattern'), ('1', 'blind in one eye'), ('2', 'slit cut trunk'), ('3', 'other trunk injury'), ('4', 'wart/bump trunk'), ('5', 'wart/bump face'), ('6', 'wrinkled forehead'), ('7', 'pointed forehead'), ('8', 'chopped trunk'), ('9', 'lip damage')], max_length=19, null=True)),
                ('tail_features', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('0', 'no tail'), ('1', 'half tail'), ('2', 'kinky tail'), ('3', 'short tail'), ('4', 'no tail hairs')], max_length=9, null=True)),
                ('individual_sighting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='view_sighting.individual_sighting')),
            ],
        ),
        migrations.CreateModel(
            name='EBUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('expert', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Search_Model',
            fields=[
                ('seek_identity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='view_sighting.seek_identity')),
                ('binary', models.BooleanField(default=False)),
                ('individual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='view_sighting.individual')),
            ],
            bases=('view_sighting.seek_identity',),
        ),
    ]
